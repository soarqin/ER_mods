#include "../luabindings.h"
#include "../defs/EquipParamWeapon.h"

namespace paramadjuster::params {

void registerEquipParamWeapon(sol::state *state, sol::table &paramsTable) {
    auto delayInit = [state, &paramsTable]() {
        if (sol::optional<sol::table> usertype = (*state)["EquipParamWeapon"]; usertype) return;
        auto indexerEquipParamWeapon = state->new_usertype<ParamTableIndexer<EquipParamWeapon>>("EquipParamWeaponTableIndexer");
        indexerEquipParamWeapon["count"] = sol::property(&ParamTableIndexer<EquipParamWeapon>::count);
        indexerEquipParamWeapon["__index"] = &ParamTableIndexer<EquipParamWeapon>::at;
        indexerEquipParamWeapon["id"] = &ParamTableIndexer<EquipParamWeapon>::paramId;
        indexerEquipParamWeapon["get"] = &ParamTableIndexer<EquipParamWeapon>::get;
        auto utEquipParamWeapon = state->new_usertype<EquipParamWeapon>("EquipParamWeapon");
        utEquipParamWeapon["disableParam_NT"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.disableParam_NT; }, [](EquipParamWeapon &param, uint8_t value) { param.disableParam_NT = value; });
        utEquipParamWeapon["behaviorVariationId"] = &EquipParamWeapon::behaviorVariationId;
        utEquipParamWeapon["sortId"] = &EquipParamWeapon::sortId;
        utEquipParamWeapon["wanderingEquipId"] = &EquipParamWeapon::wanderingEquipId;
        utEquipParamWeapon["weight"] = &EquipParamWeapon::weight;
        utEquipParamWeapon["weaponWeightRate"] = &EquipParamWeapon::weaponWeightRate;
        utEquipParamWeapon["fixPrice"] = &EquipParamWeapon::fixPrice;
        utEquipParamWeapon["reinforcePrice"] = &EquipParamWeapon::reinforcePrice;
        utEquipParamWeapon["sellValue"] = &EquipParamWeapon::sellValue;
        utEquipParamWeapon["correctStrength"] = &EquipParamWeapon::correctStrength;
        utEquipParamWeapon["correctAgility"] = &EquipParamWeapon::correctAgility;
        utEquipParamWeapon["correctMagic"] = &EquipParamWeapon::correctMagic;
        utEquipParamWeapon["correctFaith"] = &EquipParamWeapon::correctFaith;
        utEquipParamWeapon["physGuardCutRate"] = &EquipParamWeapon::physGuardCutRate;
        utEquipParamWeapon["magGuardCutRate"] = &EquipParamWeapon::magGuardCutRate;
        utEquipParamWeapon["fireGuardCutRate"] = &EquipParamWeapon::fireGuardCutRate;
        utEquipParamWeapon["thunGuardCutRate"] = &EquipParamWeapon::thunGuardCutRate;
        utEquipParamWeapon["spEffectBehaviorId0"] = &EquipParamWeapon::spEffectBehaviorId0;
        utEquipParamWeapon["spEffectBehaviorId1"] = &EquipParamWeapon::spEffectBehaviorId1;
        utEquipParamWeapon["spEffectBehaviorId2"] = &EquipParamWeapon::spEffectBehaviorId2;
        utEquipParamWeapon["residentSpEffectId"] = &EquipParamWeapon::residentSpEffectId;
        utEquipParamWeapon["residentSpEffectId1"] = &EquipParamWeapon::residentSpEffectId1;
        utEquipParamWeapon["residentSpEffectId2"] = &EquipParamWeapon::residentSpEffectId2;
        utEquipParamWeapon["materialSetId"] = &EquipParamWeapon::materialSetId;
        utEquipParamWeapon["originEquipWep"] = &EquipParamWeapon::originEquipWep;
        utEquipParamWeapon["originEquipWep1"] = &EquipParamWeapon::originEquipWep1;
        utEquipParamWeapon["originEquipWep2"] = &EquipParamWeapon::originEquipWep2;
        utEquipParamWeapon["originEquipWep3"] = &EquipParamWeapon::originEquipWep3;
        utEquipParamWeapon["originEquipWep4"] = &EquipParamWeapon::originEquipWep4;
        utEquipParamWeapon["originEquipWep5"] = &EquipParamWeapon::originEquipWep5;
        utEquipParamWeapon["originEquipWep6"] = &EquipParamWeapon::originEquipWep6;
        utEquipParamWeapon["originEquipWep7"] = &EquipParamWeapon::originEquipWep7;
        utEquipParamWeapon["originEquipWep8"] = &EquipParamWeapon::originEquipWep8;
        utEquipParamWeapon["originEquipWep9"] = &EquipParamWeapon::originEquipWep9;
        utEquipParamWeapon["originEquipWep10"] = &EquipParamWeapon::originEquipWep10;
        utEquipParamWeapon["originEquipWep11"] = &EquipParamWeapon::originEquipWep11;
        utEquipParamWeapon["originEquipWep12"] = &EquipParamWeapon::originEquipWep12;
        utEquipParamWeapon["originEquipWep13"] = &EquipParamWeapon::originEquipWep13;
        utEquipParamWeapon["originEquipWep14"] = &EquipParamWeapon::originEquipWep14;
        utEquipParamWeapon["originEquipWep15"] = &EquipParamWeapon::originEquipWep15;
        utEquipParamWeapon["weakA_DamageRate"] = &EquipParamWeapon::weakA_DamageRate;
        utEquipParamWeapon["weakB_DamageRate"] = &EquipParamWeapon::weakB_DamageRate;
        utEquipParamWeapon["weakC_DamageRate"] = &EquipParamWeapon::weakC_DamageRate;
        utEquipParamWeapon["weakD_DamageRate"] = &EquipParamWeapon::weakD_DamageRate;
        utEquipParamWeapon["sleepGuardResist_MaxCorrect"] = &EquipParamWeapon::sleepGuardResist_MaxCorrect;
        utEquipParamWeapon["madnessGuardResist_MaxCorrect"] = &EquipParamWeapon::madnessGuardResist_MaxCorrect;
        utEquipParamWeapon["saWeaponDamage"] = &EquipParamWeapon::saWeaponDamage;
        utEquipParamWeapon["equipModelId"] = &EquipParamWeapon::equipModelId;
        utEquipParamWeapon["iconId"] = &EquipParamWeapon::iconId;
        utEquipParamWeapon["durability"] = &EquipParamWeapon::durability;
        utEquipParamWeapon["durabilityMax"] = &EquipParamWeapon::durabilityMax;
        utEquipParamWeapon["attackThrowEscape"] = &EquipParamWeapon::attackThrowEscape;
        utEquipParamWeapon["parryDamageLife"] = &EquipParamWeapon::parryDamageLife;
        utEquipParamWeapon["attackBasePhysics"] = &EquipParamWeapon::attackBasePhysics;
        utEquipParamWeapon["attackBaseMagic"] = &EquipParamWeapon::attackBaseMagic;
        utEquipParamWeapon["attackBaseFire"] = &EquipParamWeapon::attackBaseFire;
        utEquipParamWeapon["attackBaseThunder"] = &EquipParamWeapon::attackBaseThunder;
        utEquipParamWeapon["attackBaseStamina"] = &EquipParamWeapon::attackBaseStamina;
        utEquipParamWeapon["guardAngle"] = &EquipParamWeapon::guardAngle;
        utEquipParamWeapon["saDurability"] = &EquipParamWeapon::saDurability;
        utEquipParamWeapon["staminaGuardDef"] = &EquipParamWeapon::staminaGuardDef;
        utEquipParamWeapon["reinforceTypeId"] = &EquipParamWeapon::reinforceTypeId;
        utEquipParamWeapon["trophySGradeId"] = &EquipParamWeapon::trophySGradeId;
        utEquipParamWeapon["trophySeqId"] = &EquipParamWeapon::trophySeqId;
        utEquipParamWeapon["throwAtkRate"] = &EquipParamWeapon::throwAtkRate;
        utEquipParamWeapon["bowDistRate"] = &EquipParamWeapon::bowDistRate;
        utEquipParamWeapon["equipModelCategory"] = &EquipParamWeapon::equipModelCategory;
        utEquipParamWeapon["equipModelGender"] = &EquipParamWeapon::equipModelGender;
        utEquipParamWeapon["weaponCategory"] = &EquipParamWeapon::weaponCategory;
        utEquipParamWeapon["wepmotionCategory"] = &EquipParamWeapon::wepmotionCategory;
        utEquipParamWeapon["guardmotionCategory"] = &EquipParamWeapon::guardmotionCategory;
        utEquipParamWeapon["atkMaterial"] = &EquipParamWeapon::atkMaterial;
        utEquipParamWeapon["defSeMaterial1"] = &EquipParamWeapon::defSeMaterial1;
        utEquipParamWeapon["correctType_Physics"] = &EquipParamWeapon::correctType_Physics;
        utEquipParamWeapon["spAttribute"] = &EquipParamWeapon::spAttribute;
        utEquipParamWeapon["spAtkcategory"] = &EquipParamWeapon::spAtkcategory;
        utEquipParamWeapon["wepmotionOneHandId"] = &EquipParamWeapon::wepmotionOneHandId;
        utEquipParamWeapon["wepmotionBothHandId"] = &EquipParamWeapon::wepmotionBothHandId;
        utEquipParamWeapon["properStrength"] = &EquipParamWeapon::properStrength;
        utEquipParamWeapon["properAgility"] = &EquipParamWeapon::properAgility;
        utEquipParamWeapon["properMagic"] = &EquipParamWeapon::properMagic;
        utEquipParamWeapon["properFaith"] = &EquipParamWeapon::properFaith;
        utEquipParamWeapon["overStrength"] = &EquipParamWeapon::overStrength;
        utEquipParamWeapon["attackBaseParry"] = &EquipParamWeapon::attackBaseParry;
        utEquipParamWeapon["defenseBaseParry"] = &EquipParamWeapon::defenseBaseParry;
        utEquipParamWeapon["guardBaseRepel"] = &EquipParamWeapon::guardBaseRepel;
        utEquipParamWeapon["attackBaseRepel"] = &EquipParamWeapon::attackBaseRepel;
        utEquipParamWeapon["guardCutCancelRate"] = &EquipParamWeapon::guardCutCancelRate;
        utEquipParamWeapon["guardLevel"] = &EquipParamWeapon::guardLevel;
        utEquipParamWeapon["slashGuardCutRate"] = &EquipParamWeapon::slashGuardCutRate;
        utEquipParamWeapon["blowGuardCutRate"] = &EquipParamWeapon::blowGuardCutRate;
        utEquipParamWeapon["thrustGuardCutRate"] = &EquipParamWeapon::thrustGuardCutRate;
        utEquipParamWeapon["poisonGuardResist"] = &EquipParamWeapon::poisonGuardResist;
        utEquipParamWeapon["diseaseGuardResist"] = &EquipParamWeapon::diseaseGuardResist;
        utEquipParamWeapon["bloodGuardResist"] = &EquipParamWeapon::bloodGuardResist;
        utEquipParamWeapon["curseGuardResist"] = &EquipParamWeapon::curseGuardResist;
        utEquipParamWeapon["atkAttribute"] = &EquipParamWeapon::atkAttribute;
        utEquipParamWeapon["rightHandEquipable"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.rightHandEquipable; }, [](EquipParamWeapon &param, uint8_t value) { param.rightHandEquipable = value; });
        utEquipParamWeapon["leftHandEquipable"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.leftHandEquipable; }, [](EquipParamWeapon &param, uint8_t value) { param.leftHandEquipable = value; });
        utEquipParamWeapon["bothHandEquipable"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.bothHandEquipable; }, [](EquipParamWeapon &param, uint8_t value) { param.bothHandEquipable = value; });
        utEquipParamWeapon["arrowSlotEquipable"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.arrowSlotEquipable; }, [](EquipParamWeapon &param, uint8_t value) { param.arrowSlotEquipable = value; });
        utEquipParamWeapon["boltSlotEquipable"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.boltSlotEquipable; }, [](EquipParamWeapon &param, uint8_t value) { param.boltSlotEquipable = value; });
        utEquipParamWeapon["enableGuard"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.enableGuard; }, [](EquipParamWeapon &param, uint8_t value) { param.enableGuard = value; });
        utEquipParamWeapon["enableParry"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.enableParry; }, [](EquipParamWeapon &param, uint8_t value) { param.enableParry = value; });
        utEquipParamWeapon["enableMagic"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.enableMagic; }, [](EquipParamWeapon &param, uint8_t value) { param.enableMagic = value; });
        utEquipParamWeapon["enableSorcery"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.enableSorcery; }, [](EquipParamWeapon &param, uint8_t value) { param.enableSorcery = value; });
        utEquipParamWeapon["enableMiracle"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.enableMiracle; }, [](EquipParamWeapon &param, uint8_t value) { param.enableMiracle = value; });
        utEquipParamWeapon["enableVowMagic"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.enableVowMagic; }, [](EquipParamWeapon &param, uint8_t value) { param.enableVowMagic = value; });
        utEquipParamWeapon["isNormalAttackType"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.isNormalAttackType; }, [](EquipParamWeapon &param, uint8_t value) { param.isNormalAttackType = value; });
        utEquipParamWeapon["isBlowAttackType"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.isBlowAttackType; }, [](EquipParamWeapon &param, uint8_t value) { param.isBlowAttackType = value; });
        utEquipParamWeapon["isSlashAttackType"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.isSlashAttackType; }, [](EquipParamWeapon &param, uint8_t value) { param.isSlashAttackType = value; });
        utEquipParamWeapon["isThrustAttackType"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.isThrustAttackType; }, [](EquipParamWeapon &param, uint8_t value) { param.isThrustAttackType = value; });
        utEquipParamWeapon["isEnhance"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.isEnhance; }, [](EquipParamWeapon &param, uint8_t value) { param.isEnhance = value; });
        utEquipParamWeapon["isHeroPointCorrect"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.isHeroPointCorrect; }, [](EquipParamWeapon &param, uint8_t value) { param.isHeroPointCorrect = value; });
        utEquipParamWeapon["isCustom"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.isCustom; }, [](EquipParamWeapon &param, uint8_t value) { param.isCustom = value; });
        utEquipParamWeapon["disableBaseChangeReset"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.disableBaseChangeReset; }, [](EquipParamWeapon &param, uint8_t value) { param.disableBaseChangeReset = value; });
        utEquipParamWeapon["disableRepair"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.disableRepair; }, [](EquipParamWeapon &param, uint8_t value) { param.disableRepair = value; });
        utEquipParamWeapon["isDarkHand"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.isDarkHand; }, [](EquipParamWeapon &param, uint8_t value) { param.isDarkHand = value; });
        utEquipParamWeapon["simpleModelForDlc"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.simpleModelForDlc; }, [](EquipParamWeapon &param, uint8_t value) { param.simpleModelForDlc = value; });
        utEquipParamWeapon["lanternWep"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.lanternWep; }, [](EquipParamWeapon &param, uint8_t value) { param.lanternWep = value; });
        utEquipParamWeapon["isVersusGhostWep"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.isVersusGhostWep; }, [](EquipParamWeapon &param, uint8_t value) { param.isVersusGhostWep = value; });
        utEquipParamWeapon["baseChangeCategory"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.baseChangeCategory; }, [](EquipParamWeapon &param, uint8_t value) { param.baseChangeCategory = value; });
        utEquipParamWeapon["isDragonSlayer"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.isDragonSlayer; }, [](EquipParamWeapon &param, uint8_t value) { param.isDragonSlayer = value; });
        utEquipParamWeapon["isDeposit"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.isDeposit; }, [](EquipParamWeapon &param, uint8_t value) { param.isDeposit = value; });
        utEquipParamWeapon["disableMultiDropShare"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.disableMultiDropShare; }, [](EquipParamWeapon &param, uint8_t value) { param.disableMultiDropShare = value; });
        utEquipParamWeapon["isDiscard"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.isDiscard; }, [](EquipParamWeapon &param, uint8_t value) { param.isDiscard = value; });
        utEquipParamWeapon["isDrop"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.isDrop; }, [](EquipParamWeapon &param, uint8_t value) { param.isDrop = value; });
        utEquipParamWeapon["showLogCondType"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.showLogCondType; }, [](EquipParamWeapon &param, uint8_t value) { param.showLogCondType = value; });
        utEquipParamWeapon["enableThrow"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.enableThrow; }, [](EquipParamWeapon &param, uint8_t value) { param.enableThrow = value; });
        utEquipParamWeapon["showDialogCondType"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.showDialogCondType; }, [](EquipParamWeapon &param, uint8_t value) { param.showDialogCondType = value; });
        utEquipParamWeapon["disableGemAttr"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.disableGemAttr; }, [](EquipParamWeapon &param, uint8_t value) { param.disableGemAttr = value; });
        utEquipParamWeapon["defSfxMaterial1"] = &EquipParamWeapon::defSfxMaterial1;
        utEquipParamWeapon["wepCollidableType0"] = &EquipParamWeapon::wepCollidableType0;
        utEquipParamWeapon["wepCollidableType1"] = &EquipParamWeapon::wepCollidableType1;
        utEquipParamWeapon["postureControlId_Right"] = &EquipParamWeapon::postureControlId_Right;
        utEquipParamWeapon["postureControlId_Left"] = &EquipParamWeapon::postureControlId_Left;
        utEquipParamWeapon["traceSfxId0"] = &EquipParamWeapon::traceSfxId0;
        utEquipParamWeapon["traceDmyIdHead0"] = &EquipParamWeapon::traceDmyIdHead0;
        utEquipParamWeapon["traceDmyIdTail0"] = &EquipParamWeapon::traceDmyIdTail0;
        utEquipParamWeapon["traceSfxId1"] = &EquipParamWeapon::traceSfxId1;
        utEquipParamWeapon["traceDmyIdHead1"] = &EquipParamWeapon::traceDmyIdHead1;
        utEquipParamWeapon["traceDmyIdTail1"] = &EquipParamWeapon::traceDmyIdTail1;
        utEquipParamWeapon["traceSfxId2"] = &EquipParamWeapon::traceSfxId2;
        utEquipParamWeapon["traceDmyIdHead2"] = &EquipParamWeapon::traceDmyIdHead2;
        utEquipParamWeapon["traceDmyIdTail2"] = &EquipParamWeapon::traceDmyIdTail2;
        utEquipParamWeapon["traceSfxId3"] = &EquipParamWeapon::traceSfxId3;
        utEquipParamWeapon["traceDmyIdHead3"] = &EquipParamWeapon::traceDmyIdHead3;
        utEquipParamWeapon["traceDmyIdTail3"] = &EquipParamWeapon::traceDmyIdTail3;
        utEquipParamWeapon["traceSfxId4"] = &EquipParamWeapon::traceSfxId4;
        utEquipParamWeapon["traceDmyIdHead4"] = &EquipParamWeapon::traceDmyIdHead4;
        utEquipParamWeapon["traceDmyIdTail4"] = &EquipParamWeapon::traceDmyIdTail4;
        utEquipParamWeapon["traceSfxId5"] = &EquipParamWeapon::traceSfxId5;
        utEquipParamWeapon["traceDmyIdHead5"] = &EquipParamWeapon::traceDmyIdHead5;
        utEquipParamWeapon["traceDmyIdTail5"] = &EquipParamWeapon::traceDmyIdTail5;
        utEquipParamWeapon["traceSfxId6"] = &EquipParamWeapon::traceSfxId6;
        utEquipParamWeapon["traceDmyIdHead6"] = &EquipParamWeapon::traceDmyIdHead6;
        utEquipParamWeapon["traceDmyIdTail6"] = &EquipParamWeapon::traceDmyIdTail6;
        utEquipParamWeapon["traceSfxId7"] = &EquipParamWeapon::traceSfxId7;
        utEquipParamWeapon["traceDmyIdHead7"] = &EquipParamWeapon::traceDmyIdHead7;
        utEquipParamWeapon["traceDmyIdTail7"] = &EquipParamWeapon::traceDmyIdTail7;
        utEquipParamWeapon["defSfxMaterial2"] = &EquipParamWeapon::defSfxMaterial2;
        utEquipParamWeapon["defSeMaterial2"] = &EquipParamWeapon::defSeMaterial2;
        utEquipParamWeapon["absorpParamId"] = &EquipParamWeapon::absorpParamId;
        utEquipParamWeapon["toughnessCorrectRate"] = &EquipParamWeapon::toughnessCorrectRate;
        utEquipParamWeapon["isValidTough_ProtSADmg"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.isValidTough_ProtSADmg; }, [](EquipParamWeapon &param, uint8_t value) { param.isValidTough_ProtSADmg = value; });
        utEquipParamWeapon["isDualBlade"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.isDualBlade; }, [](EquipParamWeapon &param, uint8_t value) { param.isDualBlade = value; });
        utEquipParamWeapon["isAutoEquip"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.isAutoEquip; }, [](EquipParamWeapon &param, uint8_t value) { param.isAutoEquip = value; });
        utEquipParamWeapon["isEnableEmergencyStep"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.isEnableEmergencyStep; }, [](EquipParamWeapon &param, uint8_t value) { param.isEnableEmergencyStep = value; });
        utEquipParamWeapon["invisibleOnRemo"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.invisibleOnRemo; }, [](EquipParamWeapon &param, uint8_t value) { param.invisibleOnRemo = value; });
        utEquipParamWeapon["unknown_0x17c_5"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.unknown_0x17c_5; }, [](EquipParamWeapon &param, uint8_t value) { param.unknown_0x17c_5 = value; });
        utEquipParamWeapon["quickMatchReplenish"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.quickMatchReplenish; }, [](EquipParamWeapon &param, uint8_t value) { param.quickMatchReplenish = value; });
        utEquipParamWeapon["isWeaponCatalyst"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.isWeaponCatalyst; }, [](EquipParamWeapon &param, uint8_t value) { param.isWeaponCatalyst = value; });
        utEquipParamWeapon["correctType_Magic"] = &EquipParamWeapon::correctType_Magic;
        utEquipParamWeapon["correctType_Fire"] = &EquipParamWeapon::correctType_Fire;
        utEquipParamWeapon["correctType_Thunder"] = &EquipParamWeapon::correctType_Thunder;
        utEquipParamWeapon["weakE_DamageRate"] = &EquipParamWeapon::weakE_DamageRate;
        utEquipParamWeapon["weakF_DamageRate"] = &EquipParamWeapon::weakF_DamageRate;
        utEquipParamWeapon["darkGuardCutRate"] = &EquipParamWeapon::darkGuardCutRate;
        utEquipParamWeapon["attackBaseDark"] = &EquipParamWeapon::attackBaseDark;
        utEquipParamWeapon["correctType_Dark"] = &EquipParamWeapon::correctType_Dark;
        utEquipParamWeapon["correctType_Poison"] = &EquipParamWeapon::correctType_Poison;
        utEquipParamWeapon["sortGroupId"] = &EquipParamWeapon::sortGroupId;
        utEquipParamWeapon["atkAttribute2"] = &EquipParamWeapon::atkAttribute2;
        utEquipParamWeapon["sleepGuardResist"] = &EquipParamWeapon::sleepGuardResist;
        utEquipParamWeapon["madnessGuardResist"] = &EquipParamWeapon::madnessGuardResist;
        utEquipParamWeapon["correctType_Blood"] = &EquipParamWeapon::correctType_Blood;
        utEquipParamWeapon["properLuck"] = &EquipParamWeapon::properLuck;
        utEquipParamWeapon["freezeGuardResist"] = &EquipParamWeapon::freezeGuardResist;
        utEquipParamWeapon["autoReplenishType"] = &EquipParamWeapon::autoReplenishType;
        utEquipParamWeapon["swordArtsParamId"] = &EquipParamWeapon::swordArtsParamId;
        utEquipParamWeapon["correctLuck"] = &EquipParamWeapon::correctLuck;
        utEquipParamWeapon["arrowBoltEquipId"] = &EquipParamWeapon::arrowBoltEquipId;
        utEquipParamWeapon["DerivationLevelType"] = &EquipParamWeapon::DerivationLevelType;
        utEquipParamWeapon["enchantSfxSize"] = &EquipParamWeapon::enchantSfxSize;
        utEquipParamWeapon["wepType"] = &EquipParamWeapon::wepType;
        utEquipParamWeapon["physGuardCutRate_MaxCorrect"] = &EquipParamWeapon::physGuardCutRate_MaxCorrect;
        utEquipParamWeapon["magGuardCutRate_MaxCorrect"] = &EquipParamWeapon::magGuardCutRate_MaxCorrect;
        utEquipParamWeapon["fireGuardCutRate_MaxCorrect"] = &EquipParamWeapon::fireGuardCutRate_MaxCorrect;
        utEquipParamWeapon["thunGuardCutRate_MaxCorrect"] = &EquipParamWeapon::thunGuardCutRate_MaxCorrect;
        utEquipParamWeapon["darkGuardCutRate_MaxCorrect"] = &EquipParamWeapon::darkGuardCutRate_MaxCorrect;
        utEquipParamWeapon["poisonGuardResist_MaxCorrect"] = &EquipParamWeapon::poisonGuardResist_MaxCorrect;
        utEquipParamWeapon["diseaseGuardResist_MaxCorrect"] = &EquipParamWeapon::diseaseGuardResist_MaxCorrect;
        utEquipParamWeapon["bloodGuardResist_MaxCorrect"] = &EquipParamWeapon::bloodGuardResist_MaxCorrect;
        utEquipParamWeapon["curseGuardResist_MaxCorrect"] = &EquipParamWeapon::curseGuardResist_MaxCorrect;
        utEquipParamWeapon["freezeGuardResist_MaxCorrect"] = &EquipParamWeapon::freezeGuardResist_MaxCorrect;
        utEquipParamWeapon["staminaGuardDef_MaxCorrect"] = &EquipParamWeapon::staminaGuardDef_MaxCorrect;
        utEquipParamWeapon["residentSfxId_1"] = &EquipParamWeapon::residentSfxId_1;
        utEquipParamWeapon["residentSfxId_2"] = &EquipParamWeapon::residentSfxId_2;
        utEquipParamWeapon["residentSfxId_3"] = &EquipParamWeapon::residentSfxId_3;
        utEquipParamWeapon["residentSfxId_4"] = &EquipParamWeapon::residentSfxId_4;
        utEquipParamWeapon["residentSfx_DmyId_1"] = &EquipParamWeapon::residentSfx_DmyId_1;
        utEquipParamWeapon["residentSfx_DmyId_2"] = &EquipParamWeapon::residentSfx_DmyId_2;
        utEquipParamWeapon["residentSfx_DmyId_3"] = &EquipParamWeapon::residentSfx_DmyId_3;
        utEquipParamWeapon["residentSfx_DmyId_4"] = &EquipParamWeapon::residentSfx_DmyId_4;
        utEquipParamWeapon["staminaConsumptionRate"] = &EquipParamWeapon::staminaConsumptionRate;
        utEquipParamWeapon["vsPlayerDmgCorrectRate_Physics"] = &EquipParamWeapon::vsPlayerDmgCorrectRate_Physics;
        utEquipParamWeapon["vsPlayerDmgCorrectRate_Magic"] = &EquipParamWeapon::vsPlayerDmgCorrectRate_Magic;
        utEquipParamWeapon["vsPlayerDmgCorrectRate_Fire"] = &EquipParamWeapon::vsPlayerDmgCorrectRate_Fire;
        utEquipParamWeapon["vsPlayerDmgCorrectRate_Thunder"] = &EquipParamWeapon::vsPlayerDmgCorrectRate_Thunder;
        utEquipParamWeapon["vsPlayerDmgCorrectRate_Dark"] = &EquipParamWeapon::vsPlayerDmgCorrectRate_Dark;
        utEquipParamWeapon["vsPlayerDmgCorrectRate_Poison"] = &EquipParamWeapon::vsPlayerDmgCorrectRate_Poison;
        utEquipParamWeapon["vsPlayerDmgCorrectRate_Blood"] = &EquipParamWeapon::vsPlayerDmgCorrectRate_Blood;
        utEquipParamWeapon["vsPlayerDmgCorrectRate_Freeze"] = &EquipParamWeapon::vsPlayerDmgCorrectRate_Freeze;
        utEquipParamWeapon["attainmentWepStatusStr"] = &EquipParamWeapon::attainmentWepStatusStr;
        utEquipParamWeapon["attainmentWepStatusDex"] = &EquipParamWeapon::attainmentWepStatusDex;
        utEquipParamWeapon["attainmentWepStatusMag"] = &EquipParamWeapon::attainmentWepStatusMag;
        utEquipParamWeapon["attainmentWepStatusFai"] = &EquipParamWeapon::attainmentWepStatusFai;
        utEquipParamWeapon["attainmentWepStatusLuc"] = &EquipParamWeapon::attainmentWepStatusLuc;
        utEquipParamWeapon["attackElementCorrectId"] = &EquipParamWeapon::attackElementCorrectId;
        utEquipParamWeapon["saleValue"] = &EquipParamWeapon::saleValue;
        utEquipParamWeapon["reinforceShopCategory"] = &EquipParamWeapon::reinforceShopCategory;
        utEquipParamWeapon["maxArrowQuantity"] = &EquipParamWeapon::maxArrowQuantity;
        utEquipParamWeapon["residentSfx_1_IsVisibleForHang"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.residentSfx_1_IsVisibleForHang; }, [](EquipParamWeapon &param, uint8_t value) { param.residentSfx_1_IsVisibleForHang = value; });
        utEquipParamWeapon["residentSfx_2_IsVisibleForHang"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.residentSfx_2_IsVisibleForHang; }, [](EquipParamWeapon &param, uint8_t value) { param.residentSfx_2_IsVisibleForHang = value; });
        utEquipParamWeapon["residentSfx_3_IsVisibleForHang"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.residentSfx_3_IsVisibleForHang; }, [](EquipParamWeapon &param, uint8_t value) { param.residentSfx_3_IsVisibleForHang = value; });
        utEquipParamWeapon["residentSfx_4_IsVisibleForHang"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.residentSfx_4_IsVisibleForHang; }, [](EquipParamWeapon &param, uint8_t value) { param.residentSfx_4_IsVisibleForHang = value; });
        utEquipParamWeapon["isSoulParamIdChange_model0"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.isSoulParamIdChange_model0; }, [](EquipParamWeapon &param, uint8_t value) { param.isSoulParamIdChange_model0 = value; });
        utEquipParamWeapon["isSoulParamIdChange_model1"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.isSoulParamIdChange_model1; }, [](EquipParamWeapon &param, uint8_t value) { param.isSoulParamIdChange_model1 = value; });
        utEquipParamWeapon["isSoulParamIdChange_model2"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.isSoulParamIdChange_model2; }, [](EquipParamWeapon &param, uint8_t value) { param.isSoulParamIdChange_model2 = value; });
        utEquipParamWeapon["isSoulParamIdChange_model3"] = sol::property([](EquipParamWeapon &param) -> uint8_t { return param.isSoulParamIdChange_model3; }, [](EquipParamWeapon &param, uint8_t value) { param.isSoulParamIdChange_model3 = value; });
        utEquipParamWeapon["wepSeIdOffset"] = &EquipParamWeapon::wepSeIdOffset;
        utEquipParamWeapon["baseChangePrice"] = &EquipParamWeapon::baseChangePrice;
        utEquipParamWeapon["levelSyncCorrectId"] = &EquipParamWeapon::levelSyncCorrectId;
        utEquipParamWeapon["correctType_Sleep"] = &EquipParamWeapon::correctType_Sleep;
        utEquipParamWeapon["correctType_Madness"] = &EquipParamWeapon::correctType_Madness;
        utEquipParamWeapon["rarity"] = &EquipParamWeapon::rarity;
        utEquipParamWeapon["gemMountType"] = &EquipParamWeapon::gemMountType;
        utEquipParamWeapon["wepRegainHp"] = &EquipParamWeapon::wepRegainHp;
        utEquipParamWeapon["spEffectMsgId0"] = &EquipParamWeapon::spEffectMsgId0;
        utEquipParamWeapon["spEffectMsgId1"] = &EquipParamWeapon::spEffectMsgId1;
        utEquipParamWeapon["spEffectMsgId2"] = &EquipParamWeapon::spEffectMsgId2;
        utEquipParamWeapon["originEquipWep16"] = &EquipParamWeapon::originEquipWep16;
        utEquipParamWeapon["originEquipWep17"] = &EquipParamWeapon::originEquipWep17;
        utEquipParamWeapon["originEquipWep18"] = &EquipParamWeapon::originEquipWep18;
        utEquipParamWeapon["originEquipWep19"] = &EquipParamWeapon::originEquipWep19;
        utEquipParamWeapon["originEquipWep20"] = &EquipParamWeapon::originEquipWep20;
        utEquipParamWeapon["originEquipWep21"] = &EquipParamWeapon::originEquipWep21;
        utEquipParamWeapon["originEquipWep22"] = &EquipParamWeapon::originEquipWep22;
        utEquipParamWeapon["originEquipWep23"] = &EquipParamWeapon::originEquipWep23;
        utEquipParamWeapon["originEquipWep24"] = &EquipParamWeapon::originEquipWep24;
        utEquipParamWeapon["originEquipWep25"] = &EquipParamWeapon::originEquipWep25;
        utEquipParamWeapon["vsPlayerDmgCorrectRate_Sleep"] = &EquipParamWeapon::vsPlayerDmgCorrectRate_Sleep;
        utEquipParamWeapon["vsPlayerDmgCorrectRate_Madness"] = &EquipParamWeapon::vsPlayerDmgCorrectRate_Madness;
        utEquipParamWeapon["saGuardCutRate"] = &EquipParamWeapon::saGuardCutRate;
        utEquipParamWeapon["defMaterialVariationValue"] = &EquipParamWeapon::defMaterialVariationValue;
        utEquipParamWeapon["spAttributeVariationValue"] = &EquipParamWeapon::spAttributeVariationValue;
        utEquipParamWeapon["stealthAtkRate"] = &EquipParamWeapon::stealthAtkRate;
        utEquipParamWeapon["vsPlayerDmgCorrectRate_Disease"] = &EquipParamWeapon::vsPlayerDmgCorrectRate_Disease;
        utEquipParamWeapon["vsPlayerDmgCorrectRate_Curse"] = &EquipParamWeapon::vsPlayerDmgCorrectRate_Curse;
        utEquipParamWeapon["restrictSpecialSwordArt"] = &EquipParamWeapon::restrictSpecialSwordArt;
    };
    auto tableLoader = [delayInit = std::move(delayInit)]() -> auto { delayInit(); return std::make_unique<ParamTableIndexer<EquipParamWeapon>>(gParamMgr.findTable(L"EquipParamWeapon")); };
    paramsTable["EquipParamWeapon"] = tableLoader;
}

}
