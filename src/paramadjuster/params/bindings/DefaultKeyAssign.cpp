#include "../luabindings.h"
#include "../defs/DefaultKeyAssign.h"

namespace paramadjuster::params {

void registerDefaultKeyAssign(sol::state *state, sol::table &paramsTable) {
    auto delayInit = [state, &paramsTable]() {
        if (sol::optional<sol::table> usertype = (*state)["DefaultKeyAssign"]; usertype) return;
        auto indexerDefaultKeyAssign = state->new_usertype<ParamTableIndexer<DefaultKeyAssign>>("DefaultKeyAssignTableIndexer");
        indexerDefaultKeyAssign["count"] = sol::property(&ParamTableIndexer<DefaultKeyAssign>::count);
        indexerDefaultKeyAssign["__index"] = &ParamTableIndexer<DefaultKeyAssign>::at;
        indexerDefaultKeyAssign["id"] = &ParamTableIndexer<DefaultKeyAssign>::paramId;
        indexerDefaultKeyAssign["get"] = &ParamTableIndexer<DefaultKeyAssign>::get;
        auto utDefaultKeyAssign = state->new_usertype<DefaultKeyAssign>("DefaultKeyAssign");
        utDefaultKeyAssign["priority0"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.priority0; }, [](DefaultKeyAssign &param, uint8_t value) { param.priority0 = value; });
        utDefaultKeyAssign["priority1"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.priority1; }, [](DefaultKeyAssign &param, uint8_t value) { param.priority1 = value; });
        utDefaultKeyAssign["priority2"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.priority2; }, [](DefaultKeyAssign &param, uint8_t value) { param.priority2 = value; });
        utDefaultKeyAssign["priority3"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.priority3; }, [](DefaultKeyAssign &param, uint8_t value) { param.priority3 = value; });
        utDefaultKeyAssign["priority4"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.priority4; }, [](DefaultKeyAssign &param, uint8_t value) { param.priority4 = value; });
        utDefaultKeyAssign["priority5"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.priority5; }, [](DefaultKeyAssign &param, uint8_t value) { param.priority5 = value; });
        utDefaultKeyAssign["priority6"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.priority6; }, [](DefaultKeyAssign &param, uint8_t value) { param.priority6 = value; });
        utDefaultKeyAssign["priority7"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.priority7; }, [](DefaultKeyAssign &param, uint8_t value) { param.priority7 = value; });
        utDefaultKeyAssign["priority8"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.priority8; }, [](DefaultKeyAssign &param, uint8_t value) { param.priority8 = value; });
        utDefaultKeyAssign["priority9"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.priority9; }, [](DefaultKeyAssign &param, uint8_t value) { param.priority9 = value; });
        utDefaultKeyAssign["priority10"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.priority10; }, [](DefaultKeyAssign &param, uint8_t value) { param.priority10 = value; });
        utDefaultKeyAssign["priority11"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.priority11; }, [](DefaultKeyAssign &param, uint8_t value) { param.priority11 = value; });
        utDefaultKeyAssign["priority12"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.priority12; }, [](DefaultKeyAssign &param, uint8_t value) { param.priority12 = value; });
        utDefaultKeyAssign["priority13"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.priority13; }, [](DefaultKeyAssign &param, uint8_t value) { param.priority13 = value; });
        utDefaultKeyAssign["priority14"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.priority14; }, [](DefaultKeyAssign &param, uint8_t value) { param.priority14 = value; });
        utDefaultKeyAssign["priority15"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.priority15; }, [](DefaultKeyAssign &param, uint8_t value) { param.priority15 = value; });
        utDefaultKeyAssign["priority16"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.priority16; }, [](DefaultKeyAssign &param, uint8_t value) { param.priority16 = value; });
        utDefaultKeyAssign["priority17"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.priority17; }, [](DefaultKeyAssign &param, uint8_t value) { param.priority17 = value; });
        utDefaultKeyAssign["priority18"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.priority18; }, [](DefaultKeyAssign &param, uint8_t value) { param.priority18 = value; });
        utDefaultKeyAssign["priority19"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.priority19; }, [](DefaultKeyAssign &param, uint8_t value) { param.priority19 = value; });
        utDefaultKeyAssign["priority20"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.priority20; }, [](DefaultKeyAssign &param, uint8_t value) { param.priority20 = value; });
        utDefaultKeyAssign["priority21"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.priority21; }, [](DefaultKeyAssign &param, uint8_t value) { param.priority21 = value; });
        utDefaultKeyAssign["priority22"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.priority22; }, [](DefaultKeyAssign &param, uint8_t value) { param.priority22 = value; });
        utDefaultKeyAssign["priority23"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.priority23; }, [](DefaultKeyAssign &param, uint8_t value) { param.priority23 = value; });
        utDefaultKeyAssign["priority24"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.priority24; }, [](DefaultKeyAssign &param, uint8_t value) { param.priority24 = value; });
        utDefaultKeyAssign["priority25"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.priority25; }, [](DefaultKeyAssign &param, uint8_t value) { param.priority25 = value; });
        utDefaultKeyAssign["priority26"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.priority26; }, [](DefaultKeyAssign &param, uint8_t value) { param.priority26 = value; });
        utDefaultKeyAssign["priority27"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.priority27; }, [](DefaultKeyAssign &param, uint8_t value) { param.priority27 = value; });
        utDefaultKeyAssign["priority28"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.priority28; }, [](DefaultKeyAssign &param, uint8_t value) { param.priority28 = value; });
        utDefaultKeyAssign["priority29"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.priority29; }, [](DefaultKeyAssign &param, uint8_t value) { param.priority29 = value; });
        utDefaultKeyAssign["priority30"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.priority30; }, [](DefaultKeyAssign &param, uint8_t value) { param.priority30 = value; });
        utDefaultKeyAssign["priority31"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.priority31; }, [](DefaultKeyAssign &param, uint8_t value) { param.priority31 = value; });
        utDefaultKeyAssign["phyisicalKey_0"] = &DefaultKeyAssign::phyisicalKey_0;
        utDefaultKeyAssign["traitsType_0"] = &DefaultKeyAssign::traitsType_0;
        utDefaultKeyAssign["a2dOperator_0"] = &DefaultKeyAssign::a2dOperator_0;
        utDefaultKeyAssign["applyTarget_0"] = &DefaultKeyAssign::applyTarget_0;
        utDefaultKeyAssign["isAnalog_0"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.isAnalog_0; }, [](DefaultKeyAssign &param, uint8_t value) { param.isAnalog_0 = value; });
        utDefaultKeyAssign["enableWin64_0"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.enableWin64_0; }, [](DefaultKeyAssign &param, uint8_t value) { param.enableWin64_0 = value; });
        utDefaultKeyAssign["enablePS4_0"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.enablePS4_0; }, [](DefaultKeyAssign &param, uint8_t value) { param.enablePS4_0 = value; });
        utDefaultKeyAssign["enableXboxOne_0"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.enableXboxOne_0; }, [](DefaultKeyAssign &param, uint8_t value) { param.enableXboxOne_0 = value; });
        utDefaultKeyAssign["time1_0"] = &DefaultKeyAssign::time1_0;
        utDefaultKeyAssign["time2_0"] = &DefaultKeyAssign::time2_0;
        utDefaultKeyAssign["a2dThreshold_0"] = &DefaultKeyAssign::a2dThreshold_0;
        utDefaultKeyAssign["phyisicalKey_1"] = &DefaultKeyAssign::phyisicalKey_1;
        utDefaultKeyAssign["traitsType_1"] = &DefaultKeyAssign::traitsType_1;
        utDefaultKeyAssign["a2dOperator_1"] = &DefaultKeyAssign::a2dOperator_1;
        utDefaultKeyAssign["applyTarget_1"] = &DefaultKeyAssign::applyTarget_1;
        utDefaultKeyAssign["isAnalog_1"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.isAnalog_1; }, [](DefaultKeyAssign &param, uint8_t value) { param.isAnalog_1 = value; });
        utDefaultKeyAssign["enableWin64_1"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.enableWin64_1; }, [](DefaultKeyAssign &param, uint8_t value) { param.enableWin64_1 = value; });
        utDefaultKeyAssign["enablePS4_1"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.enablePS4_1; }, [](DefaultKeyAssign &param, uint8_t value) { param.enablePS4_1 = value; });
        utDefaultKeyAssign["enableXboxOne_1"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.enableXboxOne_1; }, [](DefaultKeyAssign &param, uint8_t value) { param.enableXboxOne_1 = value; });
        utDefaultKeyAssign["time1_1"] = &DefaultKeyAssign::time1_1;
        utDefaultKeyAssign["time2_1"] = &DefaultKeyAssign::time2_1;
        utDefaultKeyAssign["a2dThreshold_1"] = &DefaultKeyAssign::a2dThreshold_1;
        utDefaultKeyAssign["phyisicalKey_2"] = &DefaultKeyAssign::phyisicalKey_2;
        utDefaultKeyAssign["traitsType_2"] = &DefaultKeyAssign::traitsType_2;
        utDefaultKeyAssign["a2dOperator_2"] = &DefaultKeyAssign::a2dOperator_2;
        utDefaultKeyAssign["applyTarget_2"] = &DefaultKeyAssign::applyTarget_2;
        utDefaultKeyAssign["isAnalog_2"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.isAnalog_2; }, [](DefaultKeyAssign &param, uint8_t value) { param.isAnalog_2 = value; });
        utDefaultKeyAssign["enableWin64_2"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.enableWin64_2; }, [](DefaultKeyAssign &param, uint8_t value) { param.enableWin64_2 = value; });
        utDefaultKeyAssign["enablePS4_2"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.enablePS4_2; }, [](DefaultKeyAssign &param, uint8_t value) { param.enablePS4_2 = value; });
        utDefaultKeyAssign["enableXboxOne_2"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.enableXboxOne_2; }, [](DefaultKeyAssign &param, uint8_t value) { param.enableXboxOne_2 = value; });
        utDefaultKeyAssign["time1_2"] = &DefaultKeyAssign::time1_2;
        utDefaultKeyAssign["time2_2"] = &DefaultKeyAssign::time2_2;
        utDefaultKeyAssign["a2dThreshold_2"] = &DefaultKeyAssign::a2dThreshold_2;
        utDefaultKeyAssign["phyisicalKey_3"] = &DefaultKeyAssign::phyisicalKey_3;
        utDefaultKeyAssign["traitsType_3"] = &DefaultKeyAssign::traitsType_3;
        utDefaultKeyAssign["a2dOperator_3"] = &DefaultKeyAssign::a2dOperator_3;
        utDefaultKeyAssign["applyTarget_3"] = &DefaultKeyAssign::applyTarget_3;
        utDefaultKeyAssign["isAnalog_3"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.isAnalog_3; }, [](DefaultKeyAssign &param, uint8_t value) { param.isAnalog_3 = value; });
        utDefaultKeyAssign["enableWin64_3"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.enableWin64_3; }, [](DefaultKeyAssign &param, uint8_t value) { param.enableWin64_3 = value; });
        utDefaultKeyAssign["enablePS4_3"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.enablePS4_3; }, [](DefaultKeyAssign &param, uint8_t value) { param.enablePS4_3 = value; });
        utDefaultKeyAssign["enableXboxOne_3"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.enableXboxOne_3; }, [](DefaultKeyAssign &param, uint8_t value) { param.enableXboxOne_3 = value; });
        utDefaultKeyAssign["time1_3"] = &DefaultKeyAssign::time1_3;
        utDefaultKeyAssign["time2_3"] = &DefaultKeyAssign::time2_3;
        utDefaultKeyAssign["a2dThreshold_3"] = &DefaultKeyAssign::a2dThreshold_3;
        utDefaultKeyAssign["phyisicalKey_4"] = &DefaultKeyAssign::phyisicalKey_4;
        utDefaultKeyAssign["traitsType_4"] = &DefaultKeyAssign::traitsType_4;
        utDefaultKeyAssign["a2dOperator_4"] = &DefaultKeyAssign::a2dOperator_4;
        utDefaultKeyAssign["applyTarget_4"] = &DefaultKeyAssign::applyTarget_4;
        utDefaultKeyAssign["isAnalog_4"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.isAnalog_4; }, [](DefaultKeyAssign &param, uint8_t value) { param.isAnalog_4 = value; });
        utDefaultKeyAssign["enableWin64_4"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.enableWin64_4; }, [](DefaultKeyAssign &param, uint8_t value) { param.enableWin64_4 = value; });
        utDefaultKeyAssign["enablePS4_4"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.enablePS4_4; }, [](DefaultKeyAssign &param, uint8_t value) { param.enablePS4_4 = value; });
        utDefaultKeyAssign["enableXboxOne_4"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.enableXboxOne_4; }, [](DefaultKeyAssign &param, uint8_t value) { param.enableXboxOne_4 = value; });
        utDefaultKeyAssign["time1_4"] = &DefaultKeyAssign::time1_4;
        utDefaultKeyAssign["time2_4"] = &DefaultKeyAssign::time2_4;
        utDefaultKeyAssign["a2dThreshold_4"] = &DefaultKeyAssign::a2dThreshold_4;
        utDefaultKeyAssign["phyisicalKey_5"] = &DefaultKeyAssign::phyisicalKey_5;
        utDefaultKeyAssign["traitsType_5"] = &DefaultKeyAssign::traitsType_5;
        utDefaultKeyAssign["a2dOperator_5"] = &DefaultKeyAssign::a2dOperator_5;
        utDefaultKeyAssign["applyTarget_5"] = &DefaultKeyAssign::applyTarget_5;
        utDefaultKeyAssign["isAnalog_5"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.isAnalog_5; }, [](DefaultKeyAssign &param, uint8_t value) { param.isAnalog_5 = value; });
        utDefaultKeyAssign["enableWin64_5"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.enableWin64_5; }, [](DefaultKeyAssign &param, uint8_t value) { param.enableWin64_5 = value; });
        utDefaultKeyAssign["enablePS4_5"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.enablePS4_5; }, [](DefaultKeyAssign &param, uint8_t value) { param.enablePS4_5 = value; });
        utDefaultKeyAssign["enableXboxOne_5"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.enableXboxOne_5; }, [](DefaultKeyAssign &param, uint8_t value) { param.enableXboxOne_5 = value; });
        utDefaultKeyAssign["time1_5"] = &DefaultKeyAssign::time1_5;
        utDefaultKeyAssign["time2_5"] = &DefaultKeyAssign::time2_5;
        utDefaultKeyAssign["a2dThreshold_5"] = &DefaultKeyAssign::a2dThreshold_5;
        utDefaultKeyAssign["phyisicalKey_6"] = &DefaultKeyAssign::phyisicalKey_6;
        utDefaultKeyAssign["traitsType_6"] = &DefaultKeyAssign::traitsType_6;
        utDefaultKeyAssign["a2dOperator_6"] = &DefaultKeyAssign::a2dOperator_6;
        utDefaultKeyAssign["applyTarget_6"] = &DefaultKeyAssign::applyTarget_6;
        utDefaultKeyAssign["isAnalog_6"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.isAnalog_6; }, [](DefaultKeyAssign &param, uint8_t value) { param.isAnalog_6 = value; });
        utDefaultKeyAssign["enableWin64_6"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.enableWin64_6; }, [](DefaultKeyAssign &param, uint8_t value) { param.enableWin64_6 = value; });
        utDefaultKeyAssign["enablePS4_6"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.enablePS4_6; }, [](DefaultKeyAssign &param, uint8_t value) { param.enablePS4_6 = value; });
        utDefaultKeyAssign["enableXboxOne_6"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.enableXboxOne_6; }, [](DefaultKeyAssign &param, uint8_t value) { param.enableXboxOne_6 = value; });
        utDefaultKeyAssign["time1_6"] = &DefaultKeyAssign::time1_6;
        utDefaultKeyAssign["time2_6"] = &DefaultKeyAssign::time2_6;
        utDefaultKeyAssign["a2dThreshold_6"] = &DefaultKeyAssign::a2dThreshold_6;
        utDefaultKeyAssign["phyisicalKey_7"] = &DefaultKeyAssign::phyisicalKey_7;
        utDefaultKeyAssign["traitsType_7"] = &DefaultKeyAssign::traitsType_7;
        utDefaultKeyAssign["a2dOperator_7"] = &DefaultKeyAssign::a2dOperator_7;
        utDefaultKeyAssign["applyTarget_7"] = &DefaultKeyAssign::applyTarget_7;
        utDefaultKeyAssign["isAnalog_7"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.isAnalog_7; }, [](DefaultKeyAssign &param, uint8_t value) { param.isAnalog_7 = value; });
        utDefaultKeyAssign["enableWin64_7"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.enableWin64_7; }, [](DefaultKeyAssign &param, uint8_t value) { param.enableWin64_7 = value; });
        utDefaultKeyAssign["enablePS4_7"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.enablePS4_7; }, [](DefaultKeyAssign &param, uint8_t value) { param.enablePS4_7 = value; });
        utDefaultKeyAssign["enableXboxOne_7"] = sol::property([](DefaultKeyAssign &param) -> uint8_t { return param.enableXboxOne_7; }, [](DefaultKeyAssign &param, uint8_t value) { param.enableXboxOne_7 = value; });
        utDefaultKeyAssign["time1_7"] = &DefaultKeyAssign::time1_7;
        utDefaultKeyAssign["time2_7"] = &DefaultKeyAssign::time2_7;
        utDefaultKeyAssign["a2dThreshold_7"] = &DefaultKeyAssign::a2dThreshold_7;
    };
    auto tableLoader = [delayInit = std::move(delayInit)]() -> auto { delayInit(); return std::make_unique<ParamTableIndexer<DefaultKeyAssign>>(gParamMgr.findTable(L"DefaultKeyAssign")); };
    paramsTable["DefaultKeyAssign"] = tableLoader;
}

}
